model:
  cldm:
    target: diffbir.model.cldm.ControlLDM
    params:
      latent_scale_factor: 0.18215
      unet_cfg:
        use_checkpoint: True
        image_size: 32 # unused
        in_channels: 4
        out_channels: 4
        model_channels: 320
        attention_resolutions: [ 4, 2, 1 ]
        num_res_blocks: 2
        channel_mult: [ 1, 2, 4, 4 ]
        num_head_channels: 64 # need to fix for flash-attn
        use_spatial_transformer: True
        use_linear_in_transformer: True
        transformer_depth: 1
        context_dim: 1024
        legacy: False
      vae_cfg:
        embed_dim: 4
        ddconfig:
          double_z: true
          z_channels: 4
          resolution: 256
          in_channels: 3
          out_ch: 3
          ch: 128
          ch_mult:
          - 1
          - 2
          - 4
          - 4
          num_res_blocks: 2
          attn_resolutions: []
          dropout: 0.0
      clip_cfg:
        embed_dim: 1024
        vision_cfg:
          image_size: 224
          layers: 32
          width: 1280
          head_width: 80
          patch_size: 14
        text_cfg:
          context_length: 77
          vocab_size: 49408
          width: 1024
          heads: 16
          layers: 24
        layer: "penultimate"
      controlnet_cfg:
        target: diffbir.model.controlnet.YCbCrControlNet
        params:
          use_checkpoint: True
          image_size: 32 # unused
          in_channels: 4
          hint_channels: 4
          model_channels: 320
          attention_resolutions: [ 4, 2, 1 ]
          num_res_blocks: 2
          channel_mult: [ 1, 2, 4, 4 ]
          num_head_channels: 64 # need to fix for flash-attn
          use_spatial_transformer: True
          use_linear_in_transformer: True
          transformer_depth: 1
          context_dim: 1024
          legacy: False
          ycbcr_fusion: True

  diffusion:
    target: diffbir.model.gaussian_diffusion.Diffusion
    params:
      linear_start: 0.00085
      linear_end: 0.0120
      timesteps: 1000

dataset:
  train:
    target: datasets.StaticPairedData
    params:
      # please fill in. These two folders contain corresponding hazy and clean image pairs. The current logic is that the hazy images are named name_index.png,
      # and the corresponding clean image is named name.jpg (since you may want to generate multiple hazy images for one clean image). But you can easily change this in datasets.py.
      hazy_folder: "/home/sjtu/workspace_yi/DIP_25Spring_FDU/HCD-YC/datasets/Generated_Hazy"
      clean_folder: "/home/sjtu/workspace_yi/DIP_25Spring_FDU/HCD-YC/datasets/clear"
      crop_size: 384

train:
  # pretrained sd path
  sd_path: 'weights/v2-1_512-ema-pruned.ckpt'
  # experiment directory path
  exp_dir: './experiment/stage2_ycbcr_hcycle/'
  # 3e-5 for 50k steps, 1e-5 for 50k steps
  learning_rate: 5e-5
  batch_size: 24
  num_workers: 16
  train_steps: 60000
  log_every: 100
  ckpt_every: 20000
  image_every: 1000
  resume: ~
  
  # hierarchical cycle consistency settings
  cycle_start_step: 5000     # start applying cycle consistency loss
  cycle_ramp_steps: 10000    # steps to ramp up cycle loss weight
  cycle_weight: 0.5          # hierarchical cycle consistency loss weight
  asym_weight: 0.2           # asymmetric cycle loss weight
  
  # hierarchical loss weights (balanced for efficiency)
  pixel_weight: 1.0          # pixel-level loss weight
  feature_weight: 0.5        # feature-level loss weight  
  semantic_weight: 0.3       # semantic-level loss weight
  region_weight: 0.2         # region-aware loss weight
  adaptive_weight: True      # use learnable adaptive weighting
  
  # asymmetric cycle weights (favor forward cycle)
  forward_weight: 0.8        # forward cycle weight (clear->hazy->clear)
  backward_weight: 0.2       # backward cycle weight (hazy->clear->hazy)
  
  # text guidance optimization settings
  use_dynamic_prompt: True   # enable dynamic prompt selection
  dynamic_prompt_start: 1500 # start using dynamic prompts
  use_text_processor: True   # enable text condition enhancement
  text_processor_start: 1500 # start using text processor
  text_align_weight: 0.1     # text-image alignment loss weight
  text_align_ramp_steps: 2000 # steps to ramp up text alignment weight
  
  # training stability settings
  grad_clip: 1.0             # gradient clipping threshold
  warmup_steps: 500          # warmup period before enabling advanced features
